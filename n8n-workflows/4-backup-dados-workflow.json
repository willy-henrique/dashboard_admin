{
  "name": "Backup Autom√°tico - Dados Di√°rio",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "value": "0 2 * * *"
            }
          ]
        },
        "options": {}
      },
      "id": "cron-trigger",
      "name": "Cron - Di√°rio 2h",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "url": "https://firestore.googleapis.com/v1/projects/{{ $vars.FIREBASE_PROJECT_ID }}/databases/(default)/documents",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $credentials.googleApi.access_token }}"
            }
          ]
        },
        "options": {}
      },
      "id": "firestore-backup",
      "name": "Firestore - Backup",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [460, 200]
    },
    {
      "parameters": {
        "url": "https://firebasestorage.googleapis.com/v0/b/{{ $vars.FIREBASE_PROJECT_ID }}.appspot.com/o",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $credentials.googleApi.access_token }}"
            }
          ]
        },
        "options": {}
      },
      "id": "storage-backup",
      "name": "Storage - Backup",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "backup-success",
              "leftValue": "={{ $json.success }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "backup-success-check",
      "name": "Backup Sucesso?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [680, 250]
    },
    {
      "parameters": {
        "operation": "create",
        "filePath": "/backups/{{ $now.format('yyyy-MM-dd') }}-backup-firestore.json",
        "fileContent": "={{ JSON.stringify($json, null, 2) }}",
        "options": {}
      },
      "id": "save-firestore-backup",
      "name": "Salvar - Firestore",
      "type": "n8n-nodes-base.writeFile",
      "typeVersion": 1,
      "position": [900, 200]
    },
    {
      "parameters": {
        "operation": "create",
        "filePath": "/backups/{{ $now.format('yyyy-MM-dd') }}-backup-storage.json",
        "fileContent": "={{ JSON.stringify($json, null, 2) }}",
        "options": {}
      },
      "id": "save-storage-backup",
      "name": "Salvar - Storage",
      "type": "n8n-nodes-base.writeFile",
      "typeVersion": 1,
      "position": [900, 300]
    },
    {
      "parameters": {
        "url": "https://api.telegram.org/bot{{ $vars.TELEGRAM_BOT_TOKEN }}/sendMessage",
        "authentication": "none",
        "requestMethod": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "chat_id",
              "value": "{{ $vars.TELEGRAM_ADMIN_CHAT_ID }}"
            },
            {
              "name": "text",
              "value": "‚úÖ *BACKUP REALIZADO COM SUCESSO*\n\nüìÖ **Data:** {{ $now.format('dd/MM/yyyy HH:mm') }}\nüìä **Firestore:** Backup completo\nüíæ **Storage:** Backup completo\nüìÅ **Local:** /backups/\n\nüîí **Status:** Todos os dados protegidos"
            },
            {
              "name": "parse_mode",
              "value": "Markdown"
            }
          ]
        },
        "options": {}
      },
      "id": "telegram-success",
      "name": "Telegram - Sucesso",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1120, 200]
    },
    {
      "parameters": {
        "url": "https://api.telegram.org/bot{{ $vars.TELEGRAM_BOT_TOKEN }}/sendMessage",
        "authentication": "none",
        "requestMethod": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "chat_id",
              "value": "{{ $vars.TELEGRAM_ADMIN_CHAT_ID }}"
            },
            {
              "name": "text",
              "value": "‚ùå *ERRO NO BACKUP*\n\nüìÖ **Data:** {{ $now.format('dd/MM/yyyy HH:mm') }}\n‚ö†Ô∏è **Erro:** Falha no processo de backup\nüîç **Detalhes:** {{ $json.error || 'Erro desconhecido' }}\n\nüö® **A√ß√£o necess√°ria:** Verificar logs e tentar novamente"
            },
            {
              "name": "parse_mode",
              "value": "Markdown"
            }
          ]
        },
        "options": {}
      },
      "id": "telegram-error",
      "name": "Telegram - Erro",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1120, 400]
    },
    {
      "parameters": {
        "operation": "delete",
        "filePath": "/backups/{{ $now.subtract(30, 'days').format('yyyy-MM-dd') }}-backup-firestore.json",
        "options": {}
      },
      "id": "cleanup-old-backups",
      "name": "Limpar Backups Antigos",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [900, 400]
    },
    {
      "parameters": {
        "operation": "delete",
        "filePath": "/backups/{{ $now.subtract(30, 'days').format('yyyy-MM-dd') }}-backup-storage.json",
        "options": {}
      },
      "id": "cleanup-old-storage",
      "name": "Limpar Storage Antigo",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [900, 500]
    }
  ],
  "connections": {
    "Cron - Di√°rio 2h": {
      "main": [
        [
          {
            "node": "Firestore - Backup",
            "type": "main",
            "index": 0
          },
          {
            "node": "Storage - Backup",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Firestore - Backup": {
      "main": [
        [
          {
            "node": "Backup Sucesso?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Storage - Backup": {
      "main": [
        [
          {
            "node": "Backup Sucesso?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Backup Sucesso?": {
      "main": [
        [
          {
            "node": "Salvar - Firestore",
            "type": "main",
            "index": 0
          },
          {
            "node": "Salvar - Storage",
            "type": "main",
            "index": 0
          },
          {
            "node": "Telegram - Sucesso",
            "type": "main",
            "index": 0
          },
          {
            "node": "Limpar Backups Antigos",
            "type": "main",
            "index": 0
          },
          {
            "node": "Limpar Storage Antigo",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram - Erro",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-01-15T10:00:00.000Z",
  "versionId": "1"
}

