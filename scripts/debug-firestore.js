// Script para debugar conex√£o com Firestore
const { initializeApp } = require('firebase/app');
const { 
  getFirestore, 
  collection, 
  getDocs,
  doc,
  getDoc 
} = require('firebase/firestore');

// Configura√ß√£o do Firebase (substitua pelos seus valores)
const firebaseConfig = {
  // Adicione sua configura√ß√£o do Firebase aqui
  // Exemplo:
  // apiKey: "sua-api-key",
  // authDomain: "seu-projeto.firebaseapp.com",
  // projectId: "seu-projeto-id",
  // storageBucket: "seu-projeto.appspot.com",
  // messagingSenderId: "123456789",
  // appId: "sua-app-id"
};

async function debugFirestore() {
  try {
    console.log("üîß Inicializando Firebase...")
    
    if (!firebaseConfig.apiKey) {
      console.log("‚ö†Ô∏è  Configura√ß√£o do Firebase n√£o encontrada!")
      console.log("üìù Adicione suas credenciais no arquivo scripts/debug-firestore.js")
      return
    }
    
    const app = initializeApp(firebaseConfig);
    const db = getFirestore(app);
    
    console.log("‚úÖ Firebase inicializado com sucesso!")

    // Testar acesso √† cole√ß√£o orders
    console.log("\nüîç Testando acesso √† cole√ß√£o 'orders'...")
    const ordersSnapshot = await getDocs(collection(db, 'orders'))
    console.log(`üì¶ Encontrados ${ordersSnapshot.size} pedidos na cole√ß√£o 'orders'`)

    if (ordersSnapshot.empty) {
      console.log("‚ö†Ô∏è  Nenhum pedido encontrado na cole√ß√£o 'orders'")
      console.log("üí° Verifique se:")
      console.log("   - O nome da cole√ß√£o est√° correto")
      console.log("   - Existem dados na cole√ß√£o")
      console.log("   - As regras do Firestore permitem leitura")
    } else {
      console.log("\nüìã Primeiros 3 pedidos encontrados:")
      let count = 0
      for (const orderDoc of ordersSnapshot.docs) {
        if (count >= 3) break
        const orderData = orderDoc.data()
        console.log(`\n   Pedido ${count + 1}:`)
        console.log(`   - ID: ${orderDoc.id}`)
        console.log(`   - Cliente: ${orderData.clientName || 'N/A'}`)
        console.log(`   - Email: ${orderData.clientEmail || 'N/A'}`)
        console.log(`   - Status: ${orderData.status || 'N/A'}`)
        
        // Testar subcole√ß√£o messages
        try {
          console.log(`   - Testando subcole√ß√£o messages...`)
          const messagesSnapshot = await getDocs(collection(db, `orders/${orderDoc.id}/messages`))
          console.log(`   - Mensagens encontradas: ${messagesSnapshot.size}`)
        } catch (error) {
          console.log(`   - Erro ao acessar messages: ${error.message}`)
        }
        
        count++
      }
    }

    // Testar outras cole√ß√µes
    const collectionsToTest = ['chatConversations', 'support_messages', 'messages']
    
    for (const collectionName of collectionsToTest) {
      try {
        console.log(`\nüîç Testando cole√ß√£o '${collectionName}'...`)
        const snapshot = await getDocs(collection(db, collectionName))
        console.log(`üìä ${collectionName}: ${snapshot.size} documentos`)
      } catch (error) {
        console.log(`‚ùå Erro ao acessar ${collectionName}: ${error.message}`)
      }
    }

    console.log("\nüéâ Debug conclu√≠do!")
    
  } catch (error) {
    console.error("‚ùå Erro no debug:", error)
    console.log("\nüí° Poss√≠veis solu√ß√µes:")
    console.log("   - Verificar configura√ß√£o do Firebase")
    console.log("   - Verificar regras do Firestore")
    console.log("   - Verificar conex√£o com internet")
  }
}

// Executar o debug
debugFirestore();
